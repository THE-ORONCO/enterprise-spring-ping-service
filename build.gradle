plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    // adds git information to actuator/info
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'the.oronco'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.integration:spring-integration-http'
    implementation 'org.springframework.integration:spring-integration-feed'
    implementation 'org.springframework.integration:spring-integration-file'
    implementation 'org.springframework.integration:spring-integration-event'

    // auto generates config metadata
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // tracing via open telemetry
    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    // micrometer -> opentelemetry
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    // micrometer.metrics -> influx
    implementation 'io.micrometer:micrometer-registry-influx'
    // opentelemetry -> zipkin
    implementation("io.opentelemetry:opentelemetry-exporter-zipkin")
    // adds @WithSpan instrumentation
    implementation 'io.opentelemetry:opentelemetry-extension-annotations'



    // liquibase
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.0")
        mavenBom("io.opentelemetry:opentelemetry-bom:1.34.1")
        mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.0.0-alpha")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
